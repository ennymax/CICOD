<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-05T08:57:58Z" name="Suite" finished-at="2020-12-05T08:59:56Z" duration-ms="117875">
    <groups>
    </groups>
    <test started-at="2020-12-05T08:57:58Z" name="Order History" finished-at="2020-12-05T08:59:56Z" duration-ms="117875">
      <class name="CROWN.CICOD.COM.OrderHistory.Downloadorderhistory">
        <test-method is-config="true" signature="setup()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:57:58Z" name="setup" finished-at="2020-12-05T08:57:58Z" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:57:58Z" name="setUp" finished-at="2020-12-05T08:58:32Z" duration-ms="34114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:58:32Z" name="TestName" finished-at="2020-12-05T08:58:32Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DOWNLOAD_ORDER_HISTORY status=SUCCESS method=Downloadorderhistory.DOWNLOAD_ORDER_HISTORY()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="DOWNLOAD_ORDER_HISTORY()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:58:32Z" name="DOWNLOAD_ORDER_HISTORY" finished-at="2020-12-05T08:59:07Z" duration-ms="34815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DOWNLOAD_ORDER_HISTORY -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:59:07Z" name="getResult" finished-at="2020-12-05T08:59:09Z" duration-ms="1409" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DOWNLOAD_ORDER_HISTORY status=SUCCESS method=Downloadorderhistory.DOWNLOAD_ORDER_HISTORY()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-A9ARH4A', ip: '192.168.43.169', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-A9ARH4A', ip: '192.168.43.169', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)
at CROWN.utility.JavaScriptUtil.generateAlert(JavaScriptUtil.java:42)
at CROWN.Base.TestBase.getResult(TestBase.java:214)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at CROWN.Base.Time.StartTest(Time.java:59)
at CROWN.Base.Time.main(Time.java:28)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:59:09Z" name="tearDown" finished-at="2020-12-05T08:59:09Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.Downloadorderhistory@7c7b252e]" started-at="2020-12-05T08:59:56Z" name="AfterTest" finished-at="2020-12-05T09:00:00Z" duration-ms="3527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
      </class> <!-- CROWN.CICOD.COM.OrderHistory.Downloadorderhistory -->
      <class name="CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d]" started-at="2020-12-05T08:59:09Z" name="setUp" finished-at="2020-12-05T08:59:25Z" duration-ms="16790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d]" started-at="2020-12-05T08:59:25Z" name="TestName" finished-at="2020-12-05T08:59:25Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VIEW_ORDER_history status=SUCCESS method=VIEW_ORDER_HISTORY.VIEW_ORDER_history()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="VIEW_ORDER_history()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d]" started-at="2020-12-05T08:59:25Z" name="VIEW_ORDER_history" finished-at="2020-12-05T08:59:51Z" duration-ms="25763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VIEW_ORDER_history -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d]" started-at="2020-12-05T08:59:51Z" name="getResult" finished-at="2020-12-05T08:59:53Z" duration-ms="2148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VIEW_ORDER_history status=SUCCESS method=VIEW_ORDER_HISTORY.VIEW_ORDER_history()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY@4d5d943d]" started-at="2020-12-05T08:59:53Z" name="tearDown" finished-at="2020-12-05T08:59:56Z" duration-ms="2665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CROWN.CICOD.COM.OrderHistory.VIEW_ORDER_HISTORY -->
    </test> <!-- Order History -->
  </suite> <!-- Suite -->
  <suite started-at="2020-12-05T09:00:00Z" name="Default Suite" finished-at="2020-12-05T09:00:00Z" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Default Suite -->
</testng-results>
