<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-10T14:50:33Z" name="Suite" finished-at="2020-12-10T14:52:35Z" duration-ms="122647">
    <groups>
    </groups>
    <test started-at="2020-12-10T14:50:33Z" name="Order History" finished-at="2020-12-10T14:52:35Z" duration-ms="122647">
      <class name="CROWN.CICOD.COM.Account.CustomerAccount">
        <test-method is-config="true" signature="setup()[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:50:32Z" name="setup" finished-at="2020-12-10T14:50:33Z" duration-ms="452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:50:33Z" name="setUp" finished-at="2020-12-10T14:50:54Z" duration-ms="20750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:50:54Z" name="TestName" finished-at="2020-12-10T14:50:54Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginAsAdmin status=SUCCESS method=CustomerAccount.loginAsAdmin()[pri:1, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="loginAsAdmin()[pri:1, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:50:54Z" name="loginAsAdmin" finished-at="2020-12-10T14:51:02Z" duration-ms="8049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAsAdmin -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:51:02Z" name="getResult" finished-at="2020-12-10T14:51:02Z" duration-ms="594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginAsAdmin status=SUCCESS method=CustomerAccount.loginAsAdmin()[pri:1, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:51:02Z" name="TestName" finished-at="2020-12-10T14:51:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=COM status=SUCCESS method=CustomerAccount.COM()[pri:2, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="COM()[pri:2, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:51:02Z" name="COM" finished-at="2020-12-10T14:51:10Z" duration-ms="8092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COM -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:51:10Z" name="getResult" finished-at="2020-12-10T14:51:11Z" duration-ms="107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=COM status=SUCCESS method=CustomerAccount.COM()[pri:2, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:51:11Z" name="TestName" finished-at="2020-12-10T14:51:11Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountButton status=SKIP method=CustomerAccount.AccountButton()[pri:3, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="AccountButton()[pri:3, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:51:11Z" name="AccountButton" finished-at="2020-12-10T14:52:13Z" duration-ms="62029" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.xpath: /html/body/div[2]/aside/section/ul/li[9]/a (tried for 45 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.xpath: /html/body/div[2]/aside/section/ul/li[9]/a (tried for 45 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at CROWN.CICOD.COM.Account.CustomerAccount.AccountButton(CustomerAccount.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: /html/body/div[2]/aside/section/ul/li[9]/a
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-A9ARH4A', ip: '192.168.43.169', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 83.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20201112153044, moz:geckodriverVersion: 0.28.0, moz:headless: false, moz:processID: 23204, moz:profile: C:\Users\CROWN_STAFF\AppDat..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: be22b670-6ac0-459e-b187-32e1bd922ac6
*** Element info: {Using=xpath, value=/html/body/div[2]/aside/section/ul/li[9]/a}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:641)
at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:638)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccountButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:13Z" name="getResult" finished-at="2020-12-10T14:52:13Z" duration-ms="70" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountButton status=SKIP method=CustomerAccount.AccountButton()[pri:3, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:13Z" name="TestName" finished-at="2020-12-10T14:52:13Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountButton status=SUCCESS method=CustomerAccount.AccountButton()[pri:3, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="AccountButton()[pri:3, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:13Z" name="AccountButton" finished-at="2020-12-10T14:52:24Z" duration-ms="10921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccountButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:24Z" name="getResult" finished-at="2020-12-10T14:52:24Z" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountButton status=SUCCESS method=CustomerAccount.AccountButton()[pri:3, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:24Z" name="TestName" finished-at="2020-12-10T14:52:24Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerAccountButton status=SUCCESS method=CustomerAccount.CustomerAccountButton()[pri:4, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="CustomerAccountButton()[pri:4, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:24Z" name="CustomerAccountButton" finished-at="2020-12-10T14:52:29Z" duration-ms="5275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerAccountButton -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:29Z" name="getResult" finished-at="2020-12-10T14:52:29Z" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerAccountButton status=SUCCESS method=CustomerAccount.CustomerAccountButton()[pri:4, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:29Z" name="TestName" finished-at="2020-12-10T14:52:29Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertCustomerAccount status=SUCCESS method=CustomerAccount.AssertCustomerAccount()[pri:5, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="AssertCustomerAccount()[pri:5, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:29Z" name="AssertCustomerAccount" finished-at="2020-12-10T14:52:30Z" duration-ms="1015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertCustomerAccount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:30Z" name="getResult" finished-at="2020-12-10T14:52:30Z" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertCustomerAccount status=SUCCESS method=CustomerAccount.AssertCustomerAccount()[pri:5, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="TestName(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:30Z" name="TestName" finished-at="2020-12-10T14:52:30Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertValueofCustomerAccount status=SUCCESS method=CustomerAccount.AssertValueofCustomerAccount()[pri:6, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestName -->
        <test-method signature="AssertValueofCustomerAccount()[pri:6, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:30Z" name="AssertValueofCustomerAccount" finished-at="2020-12-10T14:52:31Z" duration-ms="1012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssertValueofCustomerAccount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:31Z" name="getResult" finished-at="2020-12-10T14:52:31Z" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssertValueofCustomerAccount status=SUCCESS method=CustomerAccount.AssertValueofCustomerAccount()[pri:6, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:31Z" name="tearDown" finished-at="2020-12-10T14:52:35Z" duration-ms="4019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AfterTest()[pri:0, instance:CROWN.CICOD.COM.Account.CustomerAccount@63070bab]" started-at="2020-12-10T14:52:35Z" name="AfterTest" finished-at="2020-12-10T14:52:39Z" duration-ms="3746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
      </class> <!-- CROWN.CICOD.COM.Account.CustomerAccount -->
    </test> <!-- Order History -->
  </suite> <!-- Suite -->
</testng-results>
